plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
}
// Load keystore properties from key.properties
def keystorePropertiesFile = rootProject.file("key.properties")
def keystoreProperties = new Properties()

if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

dependencies {
    // Import the BoM for the Firebase platform
    implementation platform("com.google.firebase:firebase-bom:33.10.0") //

    // Add Firebase dependencies (no need to specify versions when using BoM)
    implementation("com.google.firebase:firebase-auth")
    implementation("com.google.firebase:firebase-analytics")

    // Google Play services for authentication
    implementation("com.google.android.gms:play-services-auth:21.3.0")

    // Fix for Java 8 compatibility issues
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.5'
}

android {
    namespace = "com.ad.split_up"
    compileSdk = 35
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = "1.8" // âœ… Fixed syntax
    }

    defaultConfig {
        applicationId = "com.ad.split_up"
        minSdk = 23
        targetSdk = flutter.targetSdkVersion
        versionCode = 1
        versionName = 1.0
        ndk {
            debugSymbolLevel 'FULL'
        }
    }

    signingConfigs {
        release {
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
            storeFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword = keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            ndk {
                debugSymbolLevel 'FULL'
            }
        }
    }
}

flutter {
    source = "../.."
}
